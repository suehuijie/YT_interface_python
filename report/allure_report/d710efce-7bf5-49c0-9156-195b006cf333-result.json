{"status": "broken", "name": "用例标题：正确用户名，正确密码", "parameters": [{"name": "expected", "value": "{'status': 200, 'message': 'OK'}"}, {"name": "test_input", "value": "{'districtCode': '640302', 'cityCode': '640300', 'name': u'\\u65b0\\u589e\\u5730\\u5740-\\u81ea\\u52a8\\u531601', 'countryCode': 'CN', 'mobile': '18509251760', 'identityCode': 'ID', 'company': u'\\u5b87\\u901a\\u79d1\\u6280\\u516c\\u53f8', 'cityName': u'\\u5434\\u5fe0\\u5e02', 'zipCode': '717200', 'countryName': u'\\u4e2d\\u56fd', 'provinceCode': '640000', 'districtName': u'\\u5229\\u901a\\u533a', 'detailAddress': u'\\u9526\\u4e1a\\u8def\\u521b\\u65b0\\u5546\\u52a1\\u516c\\u5bd3', 'identityNumber': '610628199105201727', 'provinceName': u'\\u5b81\\u590f\\u56de\\u65cf\\u81ea\\u6cbb\\u533a'}"}, {"name": "title", "value": "'正确用户名，正确密码'"}], "labels": [{"name": "feature", "value": "地址管理"}, {"name": "story", "value": "新增地址接口"}, {"name": "tag", "value": "@pytest.mark.usefixtures('userId')"}, {"name": "suite", "value": "test_set"}, {"name": "subSuite", "value": "TestAddress"}, {"name": "parentSuite", "value": "testcase"}, {"name": "host", "value": "DESKTOP-M0PGOTF"}, {"name": "thread", "value": "2436-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython2"}, {"name": "package", "value": "testcase.test_set"}], "stop": 1628647395932, "testCaseId": "bf17445e686dbbb6b15bcce899bdd76d", "historyId": "77a0d8a2501ddf78706661c025c48353", "start": 1628647395932, "fullName": "testcase.test_set.TestAddress#test_addr_add", "statusDetails": {"message": "AttributeError: 'ExecSql' object has no attribute 'cur'", "trace": "self = <test_set.TestAddress object at 0x0000000004693448>\ntest_input = {'cityCode': '640300', 'cityName': '吴忠市', 'company': '宇通科技公司', 'countryCode': 'CN', ...}\nexpected = {'message': 'OK', 'status': 200}\ntitle = '正确用户名，正确密码'\nyt_headers = {'authorization': 'Bearer 6b51e016-c6bc-408a-bb95-30a507007f0e', 'content-type': 'application/json'}\nuserId = 500000560\n\n    @allure.story(\"新增地址接口\")\n    @allure.title(\"用例标题：{title}\")\n    @pytest.mark.parametrize(\"test_input, expected, title\", test_data['set']['address_data'])\n    def test_addr_add(self, test_input, expected, title, yt_headers, userId):\n>       addrcount_before = self.sql_exec.select_one(self.sql['address']['count'].format(userId))\n\ntestcase\\test_set.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <common.execSql.ExecSql object at 0x000000000459C3C8>\nsql = \"select count(id) FROM t_basic_address WHERE id != '1421033169750065152' and user_id = 500000560\"\n\n    def select_one(self, sql):\n        \"\"\"\n        查询sql语句返回的第一条数据\n        :param sql:\n        :return:\n        \"\"\"\n>       self.cur.execute(sql)\nE       AttributeError: 'ExecSql' object has no attribute 'cur'\n\ncommon\\execSql.py:45: AttributeError"}, "uuid": "9cd5e91e-5628-4dbd-9d9e-cb78f83d7c01"}