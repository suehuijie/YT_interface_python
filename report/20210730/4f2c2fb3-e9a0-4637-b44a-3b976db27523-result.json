{"name": "用例标题：正确的用户信息（填写所有字段）", "status": "failed", "statusDetails": {"message": "AssertionError: assert '用户名已存在！' == 'OK'\n  - OK\n  + 用户名已存在！", "trace": "self = <testcase.test_set.TestUser object at 0x000001FC39FCB310>\ntest_input = {'cnName': '用户1', 'confirm': 'Qq123456', 'email': '1063514310@qq.com', 'enName': 'englishname', ...}, expected = {'message': 'OK', 'status': 200}\ntitle = '正确的用户信息（填写所有字段）', yt_headers = {'authorization': 'Bearer dd4b9d3a-6418-476e-a5b0-873f124ab32c', 'content-type': 'application/json'}\n\n    @allure.story(\"新增用户信息接口\")\n    @allure.title(\"用例标题：{title}\")\n    @pytest.mark.parametrize(\"test_input, expected, title\", test_data['set']['user_data'])\n    def test_user_add(self, test_input, expected, title, yt_headers):\n    \n        count_before = self.sql_exec.select_one(self.sql['user']['count'])[0]\n        self.log.info(\"新增子账号前，查询sql数据结果为{}\".format(count_before))\n    \n    \n        response = requests.post(url=self.url_data['user']['add_user'],\n                                 headers = yt_headers,\n                                 json=test_input)\n        self.log.info(\"接口响应数据结果为{}\".format(response.json()))\n    \n        count_after = self.sql_exec.select_one(self.sql['user']['count'])[0]\n        self.log.info(\"新增子账号后，查询sql数据结果为{}\".format(count_before))\n    \n>       assert response.json()['message'] == expected['message']\nE       AssertionError: assert '用户名已存在！' == 'OK'\nE         - OK\nE         + 用户名已存在！\n\ntestcase\\test_set.py:313: AssertionError"}, "attachments": [{"name": "log", "source": "a3bbe8e3-0744-40a1-a5c4-0d4c5cd9f4bb-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "3ab9f267-25e5-4cc2-8507-ca24da9eb391-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_input", "value": "{'username': 'SUE_ZK04_A01', 'password': 'UXExMjM0NTY=', 'confirm': 'Qq123456', 'cnName': '用户1', 'enName': 'englishname', 'roleId': 138, 'phoneNumber': '13200000001', 'email': '1063514310@qq.com'}"}, {"name": "expected", "value": "{'message': 'OK', 'status': 200}"}, {"name": "title", "value": "'正确的用户信息（填写所有字段）'"}], "start": 1627631523903, "stop": 1627631524310, "uuid": "2c772924-a7a1-4277-8ad6-be1d9c134209", "historyId": "378dd6c5b900fdd1f2ad9c1330d72a66", "testCaseId": "927452938cd34b471a14569bf7d98541", "fullName": "testcase.test_set.TestUser#test_user_add", "labels": [{"name": "feature", "value": "用户管理"}, {"name": "story", "value": "新增用户信息接口"}, {"name": "tag", "value": "@pytest.mark.usefixtures('userId')"}, {"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_set"}, {"name": "subSuite", "value": "TestUser"}, {"name": "host", "value": "DESKTOP-M0PGOTF"}, {"name": "thread", "value": "15648-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_set"}]}